{"version":3,"sources":["components/common/Header.js","components/common/Checkpoint.js","utils/index.js","utils/stocksAvailable.js","api/index.js","components/common/StockTable.js","components/common/Summary.js","components/common/StockSelect.js","components/StockPageView.js","components/StockPage.js","components/StocksList.js","components/KeyEnter.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","activeStyle","color","to","exact","Checkpoint","checkPoint","handleCheckpointChange","className","value","time","name","onChange","percent","type","step","percentage","beforeValue","nowValue","parseFloat","toFixed","groupByDay","data","_","isArray","datetime","split","firstDay","reduce","result","day","push","analyzeStockData","dataByDay","checkpointTimeCheck","map","dates","startOfDay","open","checkpointTime","close","endOfDay","length","match","checkpointTimePercentage","endOfDayPercentage","matchPercent","Math","abs","console","warn","compact","reverse","filter","stocksAvailable","ZM","NVDA","TSLA","PYPL","AAPL","FB","PFE","BA","BIDU","WFC","CAT","NFLX","WMT","AMZN","INTC","MSFT","GOOG","NKE","GILD","CRM","JPM","ABT","MA","DIS","JNJ","ADBE","IBM","BAC","MCD","AVGO","QCOM","BRK","BIIB","VZ","C","T","BMY","GS","KO","MS","NYSE","GE","V","MMM","COP","MRK","CSCO","SBUX","PM","LMT","getAvailableStocks","getStockData","stockCode","force","apiKey","getApiKey","today","moment","format","lsName","lsData","decompress","localStorage","getItem","oldLsName","Object","entries","item","find","includes","OldDay","removeItem","Promise","resolve","JSON","parse","fetch","then","res","promise","json","setItem","compress","stringify","checkApiIsValidAndSave","code","setApiKey","error","StockTable","scope","icon","faSmile","faFrown","Summary","title","lastUpdate","handleUpdate","isLoading","showMatchAnyway","totalDays","totalMatch","totalNotMatch","role","faSyncAlt","onClick","spin","StockSelect","currentStock","handleStockSelect","key","StockPageView","analyticData","StockPage","useParams","useState","setError","isLoaded","setIsLoaded","setCurrentStock","originalData","setOriginalData","setDataByDay","setAnalyticData","useEffect","values","message","event","preventDefault","target","loadAllStocks","allStockData","stock","stockData","byDate","meta","symbol","sortBy","StocksList","stockList","setStockList","listSummary","setListSummary","isLoadingObj","setIsLoadingObj","emptyStockData","setEmptyStockData","allSavedStocks","summary","final","hasDataStocks","emptyStocks","sort","handleUpdateStock","newIsLoading","_stockCode","KeyEnter","show","handleModalClose","notValid","setNotValid","setIsLoading","Modal","onHide","backdrop","backdropClassName","centered","Title","Body","Form","onSubmit","apikey","catch","log","Group","Control","placeholder","Alert","variant","Button","disabled","Footer","href","rel","Main","setCheckPoint","showModal","setShowModal","checkedValue","perNum","Number","checkPercent","prevCheckpoint","path","render","App","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.49fee9a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const activeStyle = { color: '#F15B2A' };\r\n  return (\r\n    <nav>\r\n      <NavLink to='/' activeStyle={activeStyle} exact>\r\n        Home\r\n      </NavLink>\r\n      {' | '}\r\n      <NavLink to='/stock' activeStyle={activeStyle}>\r\n        Stock Page\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './checkPoint.css';\r\nconst Checkpoint = ({ checkPoint, handleCheckpointChange }) => {\r\n  return (\r\n    <div className='st-checkpoint d-flex align-items-center mb-3'>\r\n      <span className='mr-3'>Select checkpoint</span>\r\n      <select\r\n        value={checkPoint.time}\r\n        name='time'\r\n        onChange={handleCheckpointChange}\r\n        className='custom-select mr-3'\r\n      >\r\n        <option value='1'>After One our</option>\r\n        <option value='3'>After Two ours</option>\r\n        <option value='5'>After Three ours</option>\r\n        <option value='7'>After four ours</option>\r\n      </select>\r\n      <span className='mr-3'>checkpoint value</span>\r\n\r\n      <div className='input-group'>\r\n        <input\r\n          value={checkPoint.percent}\r\n          type='number'\r\n          name='percent'\r\n          step='0.5'\r\n          className='form-control'\r\n          onChange={handleCheckpointChange}\r\n        ></input>\r\n        <div className='input-group-append'>\r\n          <span className='input-group-text'>%</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkpoint;\r\n","import _ from 'lodash';\r\n\r\nexport const percentage = (beforeValue, nowValue) => {\r\n  const percentageLong = (100 * (nowValue - beforeValue)) / beforeValue;\r\n  return parseFloat(percentageLong.toFixed(2));\r\n};\r\n\r\nexport const groupByDay = data => {\r\n  if (!_.isArray(data)) return;\r\n\r\n  const [firstDay] = data[0].datetime.split(' ');\r\n  const mappedData = _.reduce(\r\n    data,\r\n    (result, value) => {\r\n      const [day, time] = value.datetime.split(' ');\r\n      if (firstDay === day) return result; // first day come with partial data so ignore it\r\n\r\n      (result[day] || (result[day] = [])).push({ ...value, day, time });\r\n      return result;\r\n    },\r\n    {}\r\n  );\r\n  return mappedData;\r\n};\r\n\r\nexport const analyzeStockData = (dataByDay, checkPoint) => {\r\n  const checkpointTimeCheck = _(dataByDay)\r\n    .map((dates, day) => {\r\n      try {\r\n        const startOfDay = dates[0].open;\r\n        const checkpointTime = dates[checkPoint.time].close;\r\n        const endOfDay = dates[dates.length - 1].close;\r\n        const match =\r\n          (startOfDay < checkpointTime && checkpointTime < endOfDay) ||\r\n          (startOfDay > checkpointTime && checkpointTime > endOfDay)\r\n            ? true\r\n            : false;\r\n        const checkpointTimePercentage = percentage(startOfDay, checkpointTime);\r\n        const endOfDayPercentage = percentage(checkpointTime, endOfDay);\r\n        const matchPercent =\r\n          checkPoint.percent <= Math.abs(checkpointTimePercentage);\r\n        return {\r\n          day,\r\n          match,\r\n          matchPercent,\r\n          startOfDay,\r\n          checkpointTime,\r\n          endOfDay,\r\n          checkpointTimePercentage,\r\n          endOfDayPercentage,\r\n        };\r\n      } catch {\r\n        console.warn(`[analyzeStockData] - one error happened on day ${day}`);\r\n        return false;\r\n      }\r\n    })\r\n    .compact()\r\n    .reverse()\r\n    .value();\r\n\r\n  const percentCheck =\r\n    checkPoint.percent !== ''\r\n      ? _.filter(checkpointTimeCheck, day => day.matchPercent)\r\n      : checkpointTimeCheck;\r\n  return percentCheck;\r\n};\r\n","export const stocksAvailable = {\r\n  ZM: 'Zoom',\r\n  NVDA: 'NVIDIA',\r\n  TSLA: 'Tesla',\r\n  PYPL: 'PayPal',\r\n  AAPL: 'Apple',\r\n  FB: 'Facebook',\r\n  PFE: 'Pfizer',\r\n  BA: 'Boeing',\r\n  BIDU: 'Baidu',\r\n  WFC: 'Wells Fargo',\r\n  CAT: 'Caterpillar',\r\n  NFLX: 'Netflix',\r\n  WMT: 'Walmart',\r\n  AMZN: 'Amazon',\r\n  INTC: 'Intel',\r\n  MSFT: 'Microsoft',\r\n  GOOG: 'Alphabet',\r\n  NKE: 'Nike',\r\n  GILD: 'Gilead',\r\n  CRM: 'salesforce.com',\r\n  JPM: 'JPMorgan',\r\n  ABT: 'Abbott',\r\n  MA: 'MasterCard',\r\n  DIS: 'Walt Disney',\r\n  JNJ: 'J & J',\r\n  ADBE: 'Adobe',\r\n  IBM: 'IBM',\r\n  BAC: 'Bank Of America',\r\n  MCD: \"McDonald's\",\r\n  AVGO: 'Broadcom',\r\n  QCOM: 'Qualcomm',\r\n  BRK: 'B  \tBerkshire Hathaway',\r\n  BIIB: 'Biogen',\r\n  VZ: 'Verizon',\r\n  C: 'Citi Group',\r\n  T: 'AT&T',\r\n  BMY: 'Bristol Myers',\r\n  GS: 'Goldman Sachs',\r\n  KO: 'Coca Cola',\r\n  MS: 'Morgan Stanley',\r\n  NYSE: 'Colgate-Palmolive',\r\n  GE: 'General Electric',\r\n  V: 'Visa',\r\n  MMM: '3M',\r\n  COP: 'ConocoPhillips',\r\n  MRK: 'Merck',\r\n  CSCO: 'Cisco',\r\n  SBUX: 'Starbucks',\r\n  PM: 'Philip Morris',\r\n  LMT: 'Lockheed Martin',\r\n};\r\n","import moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { compress, decompress } from 'lz-string';\r\n\r\nimport { stocksAvailable } from '../utils/stocksAvailable';\r\n\r\nexport const getAvailableStocks = () => stocksAvailable;\r\n\r\nexport const getStockData = (stockCode, force) => {\r\n  // apple - AAPL\r\n  const apiKey = getApiKey();\r\n  const today = moment().format('YYYY-MM-DD');\r\n  const lsName = `stock_${stockCode}_${today}`;\r\n  const lsData = decompress(localStorage.getItem(lsName));\r\n  const oldLsName = Object.entries(localStorage)\r\n    .map(item => item[0])\r\n    .find(item => item.includes(stockCode));\r\n  const OldDay = oldLsName?.split('_')[2];\r\n  if (oldLsName && OldDay && OldDay !== today) {\r\n    localStorage.removeItem(oldLsName);\r\n  }\r\n\r\n  if (lsData && !force) {\r\n    return new Promise(resolve => resolve(JSON.parse(lsData)));\r\n  }\r\n\r\n  return fetch(\r\n    `https://api.twelvedata.com/time_series?symbol=${stockCode}&outputsize=2000&interval=30min&order=ASC&apikey=${apiKey}`\r\n  ).then(res => {\r\n    const promise = res.json();\r\n    promise.then(data =>\r\n      localStorage.setItem(lsName, compress(JSON.stringify(data)))\r\n    );\r\n    return promise;\r\n  });\r\n};\r\n\r\nexport const getAllStocksData = () => {\r\n  return _(Object.entries(localStorage))\r\n    .filter(stock => stock[0].includes('stock_'))\r\n    .map(item => [item[0], JSON.parse(decompress(item[1]))])\r\n    .value();\r\n};\r\n\r\nexport const getApiKey = () => {\r\n  return localStorage.getItem('twelve-data-api-key');\r\n};\r\n\r\nconst setApiKey = apiKey => {\r\n  localStorage.setItem('twelve-data-api-key', apiKey);\r\n};\r\n\r\nexport const checkApiIsValidAndSave = apiKey => {\r\n  return fetch(`https://api.twelvedata.com/api_usage?apikey=${apiKey}`)\r\n    .then(res => res.json())\r\n    .then(\r\n      result => {\r\n        if (result.code) {\r\n          throw result;\r\n        }\r\n        setApiKey(apiKey);\r\n        return result;\r\n      },\r\n      error => {\r\n        console.error(error);\r\n        return error;\r\n      }\r\n    );\r\n};\r\n","import { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\r\nimport { faFrown, faSmile } from '@fortawesome/free-solid-svg-icons';\r\nimport './stockTable.css';\r\n\r\nconst StockTable = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <div className={`badge ${data.match ? 'badge-success' : 'badge-danger'}`}>\r\n        {data.day}\r\n      </div>\r\n      <table className='table table-bordered'>\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>Match</th>\r\n            <th scope='col'>Start Of Day</th>\r\n            <th scope='col'>On Checkpoint</th>\r\n            <th scope='col'>End Of Day</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th>{data.startOfDay}</th>\r\n            <td>{data.startOfDay}</td>\r\n            <td>{data.checkpointTime}</td>\r\n            <td>{data.endOfDay}</td>\r\n          </tr>\r\n          <tr>\r\n            <th className='table-icon-cell'>\r\n              <FA\r\n                icon={data.match ? faSmile : faFrown}\r\n                className={data.match ? 'text-success' : 'text-danger'}\r\n              />\r\n            </th>\r\n            <td>-</td>\r\n            <td\r\n              className={\r\n                data.checkpointTimePercentage > 0\r\n                  ? 'text-success'\r\n                  : 'text-danger'\r\n              }\r\n            >\r\n              {data.checkpointTimePercentage}%\r\n            </td>\r\n            <td\r\n              className={\r\n                data.endOfDayPercentage > 0 ? 'text-success' : 'text-danger'\r\n              }\r\n            >\r\n              {data.endOfDayPercentage}%\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockTable;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport './summary.css';\r\n\r\nconst Summary = ({\r\n  data,\r\n  title,\r\n  stockCode,\r\n  lastUpdate,\r\n  handleUpdate,\r\n  isLoading,\r\n  showMatchAnyway,\r\n}) => {\r\n  const totalDays = data?.length;\r\n  const totalMatch = _.filter(data, 'match').length;\r\n  const totalNotMatch = _.filter(data, ['match', false]).length;\r\n  return (\r\n    <div className='summary-container d-flex'>\r\n      <div>\r\n        {title && (\r\n          <h4>\r\n            {!!stockCode ? (\r\n              <>\r\n                <Link to={`/stock/${stockCode}`}>{title}</Link>{' '}\r\n                <small>({stockCode})</small>\r\n              </>\r\n            ) : (\r\n              title\r\n            )}\r\n          </h4>\r\n        )}\r\n        {(lastUpdate || showMatchAnyway) && (\r\n          <div>\r\n            <span className='text-success mr-3 d-inline-block sum-match'>\r\n              Match: {totalMatch}\r\n            </span>\r\n            <span className='text-danger mr-3 d-inline-block sum-not-match'>\r\n              Not Match: {totalNotMatch}\r\n            </span>\r\n\r\n            <span\r\n              className={\r\n                (!totalDays ? 'invisible' : 'mr-3') +\r\n                ' text-primary d-inline-block sum-percent'\r\n              }\r\n            >\r\n              {((totalMatch * 100) / totalDays).toFixed(0)}%\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {(lastUpdate || !totalDays) && (\r\n        <>\r\n          {lastUpdate && (\r\n            <div>\r\n              <h4>\r\n                <small>Last Update</small>\r\n              </h4>\r\n              <div>\r\n                <small>{moment(lastUpdate).format('DD-MM-YYYY')}</small>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div\r\n            className='d-flex align-items-center pl-3'\r\n            role='button'\r\n            title='Update'\r\n          >\r\n            <FA\r\n              icon={faSyncAlt}\r\n              onClick={() => handleUpdate(stockCode)}\r\n              spin={isLoading}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport { getAvailableStocks } from '../../api';\r\n\r\nconst StockSelect = ({ currentStock, handleStockSelect }) => {\r\n  const stocksAvailable = getAvailableStocks();\r\n  return (\r\n    <select\r\n      value={currentStock}\r\n      name='stock-select'\r\n      onChange={handleStockSelect}\r\n      className='custom-select'\r\n    >\r\n      {_.map(stocksAvailable, (name, key) => (\r\n        <option key={key} value={key}>\r\n          {name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default StockSelect;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport StockTable from './common/StockTable';\r\nimport Summery from './common/Summary';\r\n\r\nimport StockSelect from './common/StockSelect';\r\nimport { getAvailableStocks } from '../api';\r\n\r\nconst StockPageView = ({\r\n  currentStock,\r\n  analyticData,\r\n  handleStockSelect,\r\n  ...props\r\n}) => {\r\n  const stocksAvailable = getAvailableStocks();\r\n  return (\r\n    <>\r\n      <h2>\r\n        {stocksAvailable[currentStock]} Stock ({currentStock})\r\n      </h2>\r\n      <StockSelect\r\n        currentStock={currentStock}\r\n        handleStockSelect={handleStockSelect}\r\n      />\r\n\r\n      <Summery data={analyticData} showMatchAnyway={true} />\r\n\r\n      {_.map(analyticData, day => (\r\n        <div key={day.day}>\r\n          <div>\r\n            <StockTable data={day} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockPageView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { groupByDay, analyzeStockData } from '../utils';\r\nimport { getStockData } from '../api';\r\nimport StockPageView from './StockPageView';\r\n\r\n// trade time 9am to  4pm\r\n\r\nconst StockPage = ({ checkPoint, match }) => {\r\n  const { code } = useParams();\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [currentStock, setCurrentStock] = useState(code || 'AAPL');\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [dataByDay, setDataByDay] = useState([]);\r\n  const [analyticData, setAnalyticData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getStockData(currentStock).then(\r\n      //apple\r\n      result => {\r\n        setIsLoaded(true);\r\n        setOriginalData(result);\r\n      },\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      error => {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    );\r\n  }, [currentStock]);\r\n\r\n  useEffect(() => {\r\n    setDataByDay(groupByDay(originalData.values));\r\n  }, [originalData]);\r\n\r\n  useEffect(() => {\r\n    setAnalyticData(analyzeStockData(dataByDay, checkPoint));\r\n  }, [dataByDay, checkPoint]);\r\n\r\n  const handleStockSelect = event => {\r\n    event.preventDefault();\r\n    setIsLoaded(false);\r\n    const { value } = event.target;\r\n    setCurrentStock(value);\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <h1>Loading...</h1>;\r\n  } else {\r\n    return (\r\n      <StockPageView\r\n        analyticData={analyticData}\r\n        currentStock={currentStock}\r\n        handleStockSelect={handleStockSelect}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default StockPage;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport Summery from '../components/common/Summary';\r\nimport { groupByDay, analyzeStockData } from '../utils';\r\nimport { getAllStocksData, getAvailableStocks, getStockData } from '../api';\r\n\r\nconst loadAllStocks = checkPoint => {\r\n  const allStockData = getAllStocksData();\r\n  return _(allStockData)\r\n    .map(item => {\r\n      const stockData = item[1];\r\n      const lastUpdate = item[0].split('_')[2];\r\n      const byDate = groupByDay(stockData.values);\r\n      const stockCode = stockData.meta.symbol;\r\n      const analyzedStock = analyzeStockData(byDate, checkPoint);\r\n      return {\r\n        stockCode,\r\n        stockData: analyzedStock,\r\n        lastUpdate,\r\n      };\r\n    })\r\n    .sortBy(['stockCode'])\r\n    .value();\r\n};\r\n\r\nconst StocksList = ({ checkPoint }) => {\r\n  const stocksAvailable = getAvailableStocks();\r\n  const [stockList, setStockList] = useState([]);\r\n  const [listSummary, setListSummary] = useState([]);\r\n  const [isLoadingObj, setIsLoadingObj] = useState({});\r\n  const [emptyStockData, setEmptyStockData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const allSavedStocks = loadAllStocks(checkPoint);\r\n    setStockList(allSavedStocks);\r\n  }, [checkPoint]);\r\n\r\n  useEffect(() => {\r\n    const summary = _.reduce(\r\n      stockList,\r\n      (final, item) => {\r\n        return [...final, ...item.stockData];\r\n      },\r\n      []\r\n    );\r\n\r\n    const hasDataStocks = _.map(stockList, stock => stock.stockCode);\r\n    const emptyStocks = _(stocksAvailable)\r\n      .map((value, key) => key)\r\n      .filter(stockCode => !_.includes(hasDataStocks, stockCode))\r\n      .sort()\r\n      .value();\r\n\r\n    setListSummary(summary);\r\n    setEmptyStockData(emptyStocks);\r\n  }, [stockList, stocksAvailable]);\r\n\r\n  const handleUpdateStock = stockCode => {\r\n    const newIsLoading = { ...isLoadingObj, [stockCode]: true };\r\n    setIsLoadingObj(newIsLoading);\r\n    getStockData(stockCode).then(() => {\r\n      const newIsLoading = { ...isLoadingObj, [stockCode]: false };\r\n      setIsLoadingObj(newIsLoading);\r\n      const allSavedStocks = loadAllStocks(checkPoint);\r\n      setStockList(allSavedStocks);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Stocks List</h2>\r\n      <Summery data={listSummary} showMatchAnyway={true} title='All' />\r\n      <hr></hr>\r\n      <br></br>\r\n      {stockList.map(stock => (\r\n        <Fragment key={stock.stockCode}>\r\n          <Summery\r\n            data={stock.stockData}\r\n            title={stocksAvailable[stock.stockCode]}\r\n            stockCode={stock.stockCode}\r\n            lastUpdate={stock.lastUpdate}\r\n            handleUpdate={handleUpdateStock}\r\n            isLoading={isLoadingObj[stock.stockCode]}\r\n          />\r\n          <hr></hr>\r\n        </Fragment>\r\n      ))}\r\n      {emptyStockData.map(_stockCode => (\r\n        <Fragment key={_stockCode}>\r\n          <Summery\r\n            title={stocksAvailable[_stockCode]}\r\n            stockCode={_stockCode}\r\n            handleUpdate={handleUpdateStock}\r\n            isLoading={isLoadingObj[_stockCode]}\r\n          />\r\n          <hr></hr>\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StocksList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Alert } from 'react-bootstrap';\r\n\r\nimport { checkApiIsValidAndSave } from '../api';\r\n\r\nconst KeyEnter = ({ show, handleModalClose }) => {\r\n  const [notValid, setNotValid] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    checkApiIsValidAndSave(event.target.apikey.value)\r\n      .then(res => {\r\n        setIsLoading(false);\r\n        handleModalClose();\r\n      })\r\n      .catch(error => {\r\n        setNotValid(true);\r\n        setIsLoading(false);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleModalClose}\r\n      backdrop='static'\r\n      backdropClassName='api-key-modal'\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Welcome to Stocks Analyzer</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        please enter API Key\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Control type='text' name='apikey' placeholder='API Key' />\r\n          </Form.Group>\r\n          {notValid && (\r\n            <Alert variant={'danger'}>API Key is invalid - try again</Alert>\r\n          )}\r\n\r\n          <Button variant='primary' type='submit' disabled={isLoading}>\r\n            {isLoading ? 'Loading...' : 'Save API Key'}\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <p>\r\n          If you don't have an API Key. Please Sign up to{' '}\r\n          <a href='https://twelvedata.com/' rel='noreferrer' target='_blank'>\r\n            TwelveData\r\n          </a>{' '}\r\n          and get it.\r\n        </p>\r\n        <br />\r\n        <p>\r\n          <small>\r\n            This app is made for my personal use. I have no intention to make\r\n            profit out of it. I am not committing the app data is correct. The\r\n            data calculation is made by me and with no professional knowledge.\r\n          </small>\r\n        </p>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default KeyEnter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Header from './common/Header';\r\nimport Checkpoint from './common/Checkpoint';\r\nimport StockPage from './StockPage';\r\nimport StocksList from './StocksList';\r\nimport KeyEnter from './KeyEnter';\r\nimport { getApiKey } from '../api';\r\n\r\nconst checkPercent = (name, value) => {\r\n  const perNum = Number(value);\r\n  if (name !== 'percent') return perNum;\r\n  return perNum < 0.01 || perNum > 30 ? '' : perNum;\r\n};\r\n\r\nconst Main = () => {\r\n  const [checkPoint, setCheckPoint] = useState({ time: 3, percent: '' });\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  useEffect(() => {\r\n    const apiKey = getApiKey();\r\n    if (!apiKey) handleShowModal();\r\n  }, []);\r\n\r\n  const handleCheckpointChange = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n\r\n    const checkedValue = checkPercent(name, value);\r\n    setCheckPoint(prevCheckpoint => ({\r\n      ...prevCheckpoint,\r\n      [name]: checkedValue,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='jumbotron'>\r\n        <Checkpoint\r\n          checkPoint={checkPoint}\r\n          handleCheckpointChange={handleCheckpointChange}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            path='/stock/:code'\r\n            render={() => <StockPage checkPoint={checkPoint} />}\r\n          />\r\n          <Route\r\n            path='/stock'\r\n            render={() => <StockPage checkPoint={checkPoint} />}\r\n          />\r\n          <Route\r\n            path='/'\r\n            render={() => <StocksList checkPoint={checkPoint} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n      <KeyEnter show={showModal} handleModalClose={handleCloseModal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div id='stock-app' className='container-fluid'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@forevolve/bootstrap-dark/dist/css/bootstrap-dark.min.css';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename='/stocks-analyzer'>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}